{
  "openapi": "3.0.0",
  "info": {
    "version": "",
    "title": "Rest Endpoints",
    "description": "This OpenAPI specification is automatically generated by Hasura."
  },
  "paths": {
    "/api/rest/addIndustrySchedule": {
      "post": {
        "summary": "addIndustrySchedule",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation addIndustrySchedule($batch_end: Int!, $batch_start: Int!, $industry_id: Int!, $is_industry: Boolean!, $month: Int!, $year:Int!) {\n  insert_schedule(objects: {batch_end: $batch_end, batch_start: $batch_start, industry_id: $industry_id, is_industry: $is_industry, month: $month, year: $year}) {\n    returning {\n      id\n    }\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_industry",
            "description": "_\"is_industry\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "industry_id",
            "description": "_\"industry_id\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "batch_start",
            "description": "_\"batch_start\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "batch_end",
            "description": "_\"batch_end\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "year",
            "description": "_\"year\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "month",
            "description": "_\"month\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_industry": {
                    "type": "boolean",
                    "nullable": false
                  },
                  "industry_id": {
                    "type": "integer",
                    "nullable": false
                  },
                  "batch_start": {
                    "type": "integer",
                    "nullable": false
                  },
                  "batch_end": {
                    "type": "integer",
                    "nullable": false
                  },
                  "year": {
                    "type": "integer",
                    "nullable": false
                  },
                  "month": {
                    "type": "integer",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_schedule": {
                      "type": "object",
                      "properties": {
                        "returning": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array",
                          "nullable": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/addIndustrySchedule"
          }
        }
      }
    },
    "/api/rest/addTrainee": {
      "post": {
        "summary": "addTraionee",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation addTrainee($iti: Int!, $DOB: date!,  $affiliationType: String!, $batch: String!, $candidateName: String!, $industry: Int!, $registrationNumber: String!, $tradeName: String!, $father: String!, $mother: String!, $gender: String!, $dateOfAdmission: date!) {\n  insert_trainee(objects: {DOB: $DOB, affiliationType: $affiliationType, batch: $batch, name: $candidateName, industry: $industry, registrationNumber: $registrationNumber, tradeName: $tradeName, iti: $iti, father: $father, mother: $mother, gender: $gender, dateOfAdmission: $dateOfAdmission}) {\n    returning {\n      id\n    }\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "batch",
            "description": "_\"batch\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "industry",
            "description": "_\"industry\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "registrationNumber",
            "description": "_\"registrationNumber\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "affiliationType",
            "description": "_\"affiliationType\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "iti",
            "description": "_\"iti\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "father",
            "description": "_\"father\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "gender",
            "description": "_\"gender\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "candidateName",
            "description": "_\"candidateName\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tradeName",
            "description": "_\"tradeName\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "mother",
            "description": "_\"mother\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "batch": {
                    "type": "string",
                    "nullable": false
                  },
                  "dateOfAdmission": {
                    "$ref": "#/components/schemas/date"
                  },
                  "industry": {
                    "type": "integer",
                    "nullable": false
                  },
                  "registrationNumber": {
                    "type": "string",
                    "nullable": false
                  },
                  "affiliationType": {
                    "type": "string",
                    "nullable": false
                  },
                  "DOB": {
                    "$ref": "#/components/schemas/date"
                  },
                  "iti": {
                    "type": "integer",
                    "nullable": false
                  },
                  "father": {
                    "type": "string",
                    "nullable": false
                  },
                  "gender": {
                    "type": "string",
                    "nullable": false
                  },
                  "candidateName": {
                    "type": "string",
                    "nullable": false
                  },
                  "tradeName": {
                    "type": "string",
                    "nullable": false
                  },
                  "mother": {
                    "type": "string",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_trainee": {
                      "type": "object",
                      "properties": {
                        "returning": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array",
                          "nullable": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/addTrainee"
          }
        }
      }
    },
    "/api/rest/getAttendanceByTraineeAndIndustryAndDate": {
      "post": {
        "summary": "getAttendanceByTraineeAndIndustryAndDate",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery getAttendanceByTraineeAndIndustryAndDate($date: date!, $industry_id: Int!, $trainee_id: Int!) {\n  attendance(where: {date: {_eq: $date}, _and: {industry_id: {_eq: $industry_id}, _and: {trainee_id: {_eq: $trainee_id}}}}) {\n    id\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "trainee_id",
            "description": "_\"trainee_id\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "industry_id",
            "description": "_\"industry_id\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "trainee_id": {
                    "type": "integer",
                    "nullable": false
                  },
                  "industry_id": {
                    "type": "integer",
                    "nullable": false
                  },
                  "date": {
                    "$ref": "#/components/schemas/date"
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "attendance": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Int",
                            "type": "integer"
                          }
                        }
                      },
                      "type": "array",
                      "nullable": false
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/getAttendanceByTraineeAndIndustryAndDate"
          }
        }
      }
    },
    "/api/rest/getTraineeByEnrlAndDob": {
      "post": {
        "summary": "getTraineeByEnrlAndDob",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery getTraineeByEnrlAndDob($registrationNumber: String!, $dob: date) {\n  trainee(where: {registrationNumber: {_eq: $registrationNumber}, _and: {DOB: {_eq: $dob}}}) {\n    id\n    name\n    batch\n    affiliationType\n    DOB\n    registrationNumber\n    tradeName\n    iti: itiByIti {\n      latitude\n      longitude\n      name\n      id\n    }\n    industry\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "registrationNumber",
            "description": "_\"registrationNumber\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "registrationNumber": {
                    "type": "string",
                    "nullable": false
                  },
                  "dob": {
                    "$ref": "#/components/schemas/date"
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "trainee": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "batch": {
                            "title": "String",
                            "type": "string"
                          },
                          "industry": {
                            "title": "Int",
                            "type": "integer"
                          },
                          "registrationNumber": {
                            "title": "String",
                            "type": "string"
                          },
                          "affiliationType": {
                            "title": "String",
                            "type": "string"
                          },
                          "DOB": {
                            "title": "date"
                          },
                          "iti": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "title": "Float",
                                "type": "number"
                              },
                              "name": {
                                "title": "String",
                                "type": "string"
                              },
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              },
                              "longitude": {
                                "title": "Float",
                                "type": "number"
                              }
                            }
                          },
                          "name": {
                            "title": "String",
                            "type": "string"
                          },
                          "id": {
                            "title": "Int",
                            "type": "integer"
                          },
                          "tradeName": {
                            "title": "String",
                            "type": "string"
                          }
                        }
                      },
                      "type": "array",
                      "nullable": false
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/getTraineeByEnrlAndDob"
          }
        }
      }
    },
    "/api/rest/addIti": {
      "post": {
        "summary": "AddIti",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation addIti ($latitude: Float!, $longitude: Float!, $name: String!,){\n  insert_iti(objects: {latitude: $latitude, longitude: $longitude, name: $name}) {\n    returning {\n      id\n    }\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "latitude",
            "description": "_\"latitude\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "_\"name\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "longitude",
            "description": "_\"longitude\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "nullable": false
                  },
                  "name": {
                    "type": "string",
                    "nullable": false
                  },
                  "longitude": {
                    "type": "number",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_iti": {
                      "type": "object",
                      "properties": {
                        "returning": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array",
                          "nullable": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/addIti"
          }
        }
      }
    },
    "/api/rest/getIndustryByName": {
      "get": {
        "summary": "getIndustryByName",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery getIndustryByName($name: String!) {\n  industry(where: {name: {_eq: $name}}) {\n    id\n    name\n    longitude\n    latitude\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "_\"name\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "industry": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "latitude": {
                            "title": "Float",
                            "type": "number"
                          },
                          "name": {
                            "title": "String",
                            "type": "string"
                          },
                          "id": {
                            "title": "Int",
                            "type": "integer"
                          },
                          "longitude": {
                            "title": "Float",
                            "type": "number"
                          }
                        }
                      },
                      "type": "array",
                      "nullable": false
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/getIndustryByName"
          }
        }
      }
    },
    "/api/rest/getMyQuery": {
      "get": {
        "summary": "getMyQuery",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery MyQuery($id: Int!) {\n  iti(where: {id: {_eq: $id}}) {\n    id\n    latitude\n    longitude\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "id",
            "description": "_\"id\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "iti": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "latitude": {
                            "title": "Float",
                            "type": "number"
                          },
                          "id": {
                            "title": "Int",
                            "type": "integer"
                          },
                          "longitude": {
                            "title": "Float",
                            "type": "number"
                          }
                        }
                      },
                      "type": "array",
                      "nullable": false
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/getMyQuery"
          }
        }
      }
    },
    "/api/rest/addIndustry": {
      "post": {
        "summary": "addIndustry",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation addIndustry($latitude: Float, $longitude: Float, $name: String!) {\n  insert_industry(objects: {latitude: $latitude, longitude: $longitude, name: $name}) {\n    returning {\n      id\n    }\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "latitude"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "_\"name\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "longitude"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "nullable": false
                  },
                  "longitude": {
                    "type": "number",
                    "nullable": true
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_industry": {
                      "type": "object",
                      "properties": {
                        "returning": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array",
                          "nullable": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/addIndustry"
          }
        }
      }
    },
    "/api/rest/getLatLongByTraineeId": {
      "get": {
        "summary": "getLatLongByTraineeId",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery getLatLongByTraineeId($id: Int! ) {\n  trainee(where: {id: {_eq: $id}}) {\n    itiByIti {\n      latitude\n      longitude\n    }\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "id",
            "description": "_\"id\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "trainee": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "itiByIti": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "title": "Float",
                                "type": "number"
                              },
                              "longitude": {
                                "title": "Float",
                                "type": "number"
                              }
                            }
                          }
                        }
                      },
                      "type": "array",
                      "nullable": false
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/getLatLongByTraineeId"
          }
        }
      }
    },
    "/api/rest/getTrainee": {
      "get": {
        "summary": "Get Trainee",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery getTrainee($id: Int!) {\n  trainee(where: {id: {_eq: $id}}) {\n    name\n    batch\n    id\n    DOB\n    affiliationType\n    registrationNumber\n    tradeName\n    iti\n    industry\n    itiByIti {\n      id\n      name\n    }\n    industryByIndustry {\n      id\n      name\n      latitude\n      longitude\n    }\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "id",
            "description": "_\"id\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "trainee": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "batch": {
                            "title": "String",
                            "type": "string"
                          },
                          "industry": {
                            "title": "Int",
                            "type": "integer"
                          },
                          "registrationNumber": {
                            "title": "String",
                            "type": "string"
                          },
                          "affiliationType": {
                            "title": "String",
                            "type": "string"
                          },
                          "industryByIndustry": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "title": "Float",
                                "type": "number"
                              },
                              "name": {
                                "title": "String",
                                "type": "string"
                              },
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              },
                              "longitude": {
                                "title": "Float",
                                "type": "number"
                              }
                            }
                          },
                          "DOB": {
                            "title": "date"
                          },
                          "iti": {
                            "title": "Int",
                            "type": "integer"
                          },
                          "name": {
                            "title": "String",
                            "type": "string"
                          },
                          "id": {
                            "title": "Int",
                            "type": "integer"
                          },
                          "itiByIti": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "String",
                                "type": "string"
                              },
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              }
                            }
                          },
                          "tradeName": {
                            "title": "String",
                            "type": "string"
                          }
                        }
                      },
                      "type": "array",
                      "nullable": false
                    }
                  }
                }
              }
            },
            "description": "Responses for GET /api/rest/getTrainee"
          }
        }
      }
    },
    "/api/rest/addAttendance": {
      "post": {
        "summary": "addAttendance",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nmutation addAttendance($date: date!, $industry_id: Int!, $is_present: Boolean!, $trainee_id: Int!) {\n  insert_attendance(objects: {date: $date, industry_id: $industry_id, is_present: $is_present, trainee_id: $trainee_id}) {\n    returning {\n      id\n    }\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "trainee_id",
            "description": "_\"trainee_id\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "industry_id",
            "description": "_\"industry_id\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_present",
            "description": "_\"is_present\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "trainee_id": {
                    "type": "integer",
                    "nullable": false
                  },
                  "industry_id": {
                    "type": "integer",
                    "nullable": false
                  },
                  "date": {
                    "$ref": "#/components/schemas/date"
                  },
                  "is_present": {
                    "type": "boolean",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "insert_attendance": {
                      "type": "object",
                      "properties": {
                        "returning": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Int",
                                "type": "integer"
                              }
                            }
                          },
                          "type": "array",
                          "nullable": false
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/addAttendance"
          }
        }
      }
    },
    "/api/rest/getIndustryScheduleByMonthAndYear": {
      "post": {
        "summary": "getIndustryScheduleByMonthAndYear",
        "description": "***\nThe GraphQl query for this endpoint is:\n``` graphql\nquery getIndustryScheduleByMonthAndYear($month: Int!, $year: Int!, $industry_id: Int!) {\n  schedule(where: {month: {_eq: $month}, _and: {year: {_eq: $year}, _and: {industry_id: {_eq: $industry_id}}}}) {\n    id\n    is_industry\n  }\n}\n```",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-hasura-admin-secret",
            "description": "Your x-hasura-admin-secret will be used for authentication of the API request."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "industry_id",
            "description": "_\"industry_id\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "year",
            "description": "_\"year\" is required (enter it either in parameters or request body)_"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "month",
            "description": "_\"month\" is required (enter it either in parameters or request body)_"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "industry_id": {
                    "type": "integer",
                    "nullable": false
                  },
                  "year": {
                    "type": "integer",
                    "nullable": false
                  },
                  "month": {
                    "type": "integer",
                    "nullable": false
                  }
                }
              }
            }
          },
          "description": "Query parameters can also be provided in the request body as a JSON object"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "schedule": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_industry": {
                            "title": "Boolean",
                            "type": "boolean"
                          },
                          "id": {
                            "title": "Int",
                            "type": "integer"
                          }
                        }
                      },
                      "type": "array",
                      "nullable": false
                    }
                  }
                }
              }
            },
            "description": "Responses for POST /api/rest/getIndustryScheduleByMonthAndYear"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "date": {
        "nullable": false
      }
    }
  }
}
